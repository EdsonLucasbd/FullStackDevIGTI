{"ast":null,"code":"var _jsxFileName = \"/home/lucas/IGTI/ReactToDos/frontend/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as api from './api/api';\nimport * as dateHelper from './helpers/dateHelpers';\nimport Button from './components/Button';\nimport ButtonContainer from './components/ButtonContainer';\nimport Summary from './components/Summary';\nimport Todos from './components/Todos';\nconst SUMMARY = {\n  totalTasks: 0,\n  totalDone: 0,\n  totalNoteDone: 0\n};\nexport default function App() {\n  const years = dateHelper.getAllYears();\n  const months = dateHelper.getAllMonths();\n  const [selectedYear, setSelectedYear] = useState(0);\n  const [selectedMonth, setSelectedMonth] = useState(0);\n  const [selectedTodos, setSelectedTodos] = useState([]);\n  const [summary, setSummary] = useState(SUMMARY);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasks = await api.getTodosByYearMonth(selectedYear, selectedMonth);\n      setSelectedTodos(tasks);\n    };\n\n    getTasks();\n  }, [selectedYear, selectedMonth]);\n  useEffect(() => {\n    const summary = selectedTodos.reduce((accumulator, {\n      done\n    }) => {\n      accumulator.totalTasks++;\n      done ? accumulator.totalDone++ : accumulator.totalNotDone++;\n      return accumulator;\n    }, {\n      totalTasks: 0,\n      totalDone: 0,\n      totalNotDone: 0\n    });\n    setSummary(summary);\n  }, [selectedTodos]);\n\n  const handleYearClick = year => {\n    setSelectedYear(year);\n  };\n\n  const handleMonthClick = monthNumber => {\n    setSelectedMonth(monthNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"React Todos\"), /*#__PURE__*/React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, years.map(year => {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: year,\n      value: year,\n      description: year,\n      selected: selectedYear,\n      color: \"indigo darken-4\",\n      onButtonClick: handleYearClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, months.map(({\n    monthNumber,\n    month\n  }) => {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: monthNumber,\n      value: monthNumber,\n      description: month,\n      selected: selectedMonth,\n      color: \"red darken 4\",\n      onButtonClick: handleMonthClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Summary, {\n    summary: summary,\n    mainSummary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todos, {\n    todos: selectedTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/lucas/IGTI/ReactToDos/frontend/src/App.js"],"names":["React","useEffect","useState","api","dateHelper","Button","ButtonContainer","Summary","Todos","SUMMARY","totalTasks","totalDone","totalNoteDone","App","years","getAllYears","months","getAllMonths","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedTodos","setSelectedTodos","summary","setSummary","getTasks","tasks","getTodosByYearMonth","reduce","accumulator","done","totalNotDone","handleYearClick","year","handleMonthClick","monthNumber","map","month"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport * as api from './api/api';\nimport * as dateHelper from './helpers/dateHelpers';\n\nimport Button from './components/Button';\nimport ButtonContainer from './components/ButtonContainer';\nimport Summary from './components/Summary';\nimport Todos from './components/Todos';\n\nconst SUMMARY = {\n  totalTasks: 0,\n  totalDone: 0,\n  totalNoteDone: 0,\n};\n\nexport default function App() {\n  const years = dateHelper.getAllYears();\n  const months = dateHelper.getAllMonths();\n  const [selectedYear, setSelectedYear] = useState(0);\n  const [selectedMonth, setSelectedMonth] = useState(0);\n  const [selectedTodos, setSelectedTodos] = useState([]);\n  const [summary, setSummary] = useState(SUMMARY);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasks = await api.getTodosByYearMonth(\n        selectedYear,\n        selectedMonth\n      );\n      setSelectedTodos(tasks);\n    };\n    getTasks();\n  }, [selectedYear, selectedMonth]);\n\n  useEffect(() => {\n    const summary = selectedTodos.reduce(\n        (accumulator, { done }) => {\n            accumulator.totalTasks++;\n            done ? accumulator.totalDone++ : accumulator.totalNotDone++;\n            return accumulator;\n        },\n        { totalTasks: 0, totalDone: 0, totalNotDone: 0 }\n    );\n    setSummary(summary);\n  }, [selectedTodos]);\n\n  const handleYearClick = (year) => {\n    setSelectedYear(year);\n  };\n\n  const handleMonthClick = (monthNumber) => {\n    setSelectedMonth(monthNumber);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"center\">React Todos</h1>\n\n      <ButtonContainer>\n        {years.map((year) => {\n          return (\n            <Button\n              key={year}\n              value={year}\n              description={year}\n              selected={selectedYear}\n              color=\"indigo darken-4\"\n              onButtonClick={handleYearClick}\n            />\n          );\n        })}\n      </ButtonContainer>\n\n      <ButtonContainer>\n        {months.map(({ monthNumber, month }) => {\n          return (\n            <Button\n              key={monthNumber}\n              value={monthNumber}\n              description={month}\n              selected={selectedMonth}\n              color=\"red darken 4\"\n              onButtonClick={handleMonthClick}\n            />\n          );\n        })}\n      </ButtonContainer>\n\n      <Summary summary={summary} mainSummary={true} />\n\n      <Todos  todos={selectedTodos} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}